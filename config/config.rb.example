#!/usr/bin/env ruby
# vim: softtabstop=2 shiftwidth=2 expandtab fenc=utf-8 spelllang=en ft=ruby

##############
#  Settings  #
##############

# REQUIRED >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

# ORACLE SUPPORT CREDENTIALS
# MOS username and password must be specified in order to
# download the DPK files from Oracle.
MOS_USERNAME='USER@EXAMPLE.COM'
MOS_PASSWORD='MYMOSPASSWORD'

# Alternatively, if you wish to store your credentials in environment
# variables simply remove the above lines and uncomment the two
# following lines.
#MOS_USERNAME = ENV['MOS_USERNAME']
#MOS_PASSWORD = ENV['MOS_PASSWORD']

# PATCH ID
# Specify the patch id for the PUM you wish to use
PATCH_ID='34775556' # HR Image 45

# OPTIONAL >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

# OPERATING_SYSTEM
# Which OS to use as the base box for the DPK.  The available options
# are either 'LINUX' (Oracle Enterprise Linux 7.x) or 'WINDOWS'
# If left undefined, it will default to Linux.
# OPERATING_SYSTEM = 'LINUX'
# One Windows Versions is supported, "2019" or "2019CORE"
# WIN_VERSION = "2019"

# MEMORY
# The amount of RAM to allocate to the Virtual Machine
# MEMORY='10240'

# DPK_VERSION
# A name describing which dpk is being used. This is primarily used for
# defining the virtual machine name to be used within VirtualBox. If
# undefined it will default to the PATCH_ID.
# DPK_VERSION = 'VMNAME'

# PSFT_BASE_DIR
# the base folder where the DPK will install software
# PSFT_BASE_DIR='c:/psft'

# PEOPLETOOLS_PATCH
# To apply a PeopleTools Patch to the PeopleSoft Image, you must be using
# a Windows NativeOS DPK. Change APPLY_PT_PATCH to 'true' and enter the
# Patch ID for PTP_PATCH_ID.
#APPLY_PT_PATCH='true'
#PTP_PATCH_ID=''

# ELASTICSARCH
# Vagabond can download the Elasticsarch DPK, but won't configure it yet.
#ES_PATCH_ID=''

# CUSTOM DPK ROLE
# Change the DPK Role in site.pp to something custom.
# Use `vagrant provision --provision-with=dpk-modules` to update the site.pp file.
# DPK_ROLE = '::io_role::io_tools_demo'

# HOSTONLY NETWORK_SETTINGS (default)
# Uncomment the following to configure the VM for host-only networking.
# The VM will only be accessible from your local machine.
# NETWORK_SETTINGS = {
#   :type => "hostonly",
#   :domain => "psadmin.local", 
#   :host_http_port => "8000",
#   :guest_http_port => "8000",
#   :host_listener_port1 => "1521",
#   :guest_listener_port1 => "1521",
#   :host_listener_port2 => "1522",
#   :guest_listener_port2 => "1522",
#   :host_rdp_port => "33389",
#   :guest_rdp_port => "3389",
#   :host_es_port => "9200",
#   :guest_es_port => "9200",
#   :host_kb_port => "5601",
#   :guest_kb_port => "5601"
# }

# PRIVATE NETWORK_SETTINGS
# Uncomment and modify the following to use with a private network.  This is useful
# for making a small private network.
# NETWORK_SETTINGS = {
#   :type => "private",
#   :domain => "psadmin.local", 
#   :ip_address => "10.0.1.199"
# }

# BRIDGED NETWORK_SETTINGS
# Uncomment and modify the following to use bridged networking.  This is useful
# if you wish to connect to the PUM from another host.
# NETWORK_SETTINGS = {
#   :type => "bridged",
#   :ip_address => "10.0.1.199",
#   :gateway => "10.0.1.1",
#   :domain => "psadmin.local" 
# }

# DPK_LOCAL_DIR
# The directory location (relative to the host machine) to download and extract the dpk
# files. This defaults to the "dpks/<patch_id>" directory from where ps-vagabond is started.
#DPK_LOCAL_DIR = 'C:/psft/dpks'

# DPK_REMOTE_DIR
# The directory location on the virtual machine where the dpk files will be
# downloaded, extracted, and run from.  This defaults to the
# "/media/sf_<dpk_version>" directory on the VM.
# DPK_REMOTE_DIR = '/opt/psft/dpks'  ## LINUX example
# DPK_REMOTE_DIR = 'C:/psft/dpks'    ## WINDOWS example

# FQDN
# The hostname for the virtual machine.  If undefined, vagrant will
# automatically generate a hostname.
# NOTE: this value must be 30 characters or less, otherwise the DPK
#       scripts will try to "fix" it by stripping off the domain
# NOTE: On Windows, use only the hostname, not the domain name.
#       VirtualBox will error if the hostname has "." in it
# FQDN='psvagabond'

# CLIENT_TOOLS
# Set CLIENT_TOOLS to true if you want the PeopleTools Client to
# be installed
# CLIENT_TOOLS = 'true'

# CA_SETTINGS
# Uncomment and modify the following to setup Change Assistant.
#CA_SETTINGS = {
  #:setup  => 'true',
  #:path   => 'C:\Program Files\PeopleSoft\Change Assistant',
  #:type   => 'upgrade', # new upgrade uninstall
  #:backup => 'backup' # backup nobackup
#}

# PTF_SETUP
# Uncomment and modify the following to setup PeopleSoft Test Framework.
#PTF_SETUP = 'true'

# CLIENT MISC
#IE_HOMEPAGE = 'http://localhost:8000/ps/signon.html'

##############
#  Defaults  #
##############
# All of the settings below should be left as-is
OPERATING_SYSTEM = "LINUX" unless defined? OPERATING_SYSTEM
WIN_VERSION = "2019" unless defined? WIN_VERSION
MEMORY = "10240" unless defined? MEMORY
FQDN = 'psvagabond' unless defined? FQDN
DPK_VERSION = PATCH_ID unless defined? DPK_VERSION
DPK_LOCAL_DIR = "dpks/download" unless defined? DPK_LOCAL_DIR
# NOTE: The pum setup script for linux will fail unless the DPK_REMOTE_DIR (DPK
#       installation directory) is mounted under "/media/sf_*".
DPK_REMOTE_DIR_LNX = "/media/sf_#{DPK_VERSION}" unless defined? DPK_REMOTE_DIR
DPK_REMOTE_DIR_WIN = "C:/psft/dpks/download/#{DPK_VERSION}" unless defined? DPK_REMOTE_DIR
NETWORK_SETTINGS = { :type => "hostonly", :domain => "psadmin.local", :host_http_port => "8000", :guest_http_port => "8000", :host_listener_port1 => "1521", :guest_listener_port1 => "1521", :host_listener_port2 => "1522", :guest_listener_port2 => "1522", :host_rdp_port => "33389", :guest_rdp_port => "3389", :host_es_port => "9200", :guest_es_port => "9200", :host_kb_port => "5601", :guest_kb_port => "5601"} unless defined? NETWORK_SETTINGS
PSFT_BASE_DIR = "/opt/oracle/psft"
PSFT_CFG_DIR = "#{PSFT_BASE_DIR}/cfg" unless defined? PSFT_CFG_DIR

DPK_BOOTSTRAP = 'true' unless defined? DPK_BOOTSTRAP
PUPPET_APPLY = 'true' unless defined? PUPPET_APPLY
CLIENT_TOOLS = 'false' unless defined? CLIENT_TOOLS
CA_SETTINGS = { :setup => false, :path => '', :type => '', :backup => '' } unless defined? CA_SETTINGS
PTF_SETUP = 'false' unless defined? PTF_SETUP
APPLY_PT_PATCH = 'false' unless defined? APPLY_PT_PATCH
DPK_ROLE = '' unless defined? DPK_ROLE
IE_HOMEPAGE = 'http://psadmin.psvagabond.local:8000/ps/signon.html' unless defined? IE_HOMEPAGE

if OPERATING_SYSTEM.upcase == "WINDOWS"
  PUPPET_HOME = "C:/ProgramData/PuppetLabs/puppet/etc" unless defined? PUPPET_HOME
  PSFT_BASE_DIR = "c:/psft"
elsif OPERATING_SYSTEM == "LINUX"
  PUPPET_HOME = "#{PSFT_BASE_DIR}/psft_puppet_agent" unless defined? PUPPET_HOME
else
  raise Vagrant::Errors::VagrantError.new, "Operating System #{OPERATING_SYSTEM} is not supported"
end
